var t = 0;
var final = "END!!!";

var bits = [
  [[""],[""]],
  [["ω+"],[""]],
  [["ω<sup>2</sup>+"],[""]],
  [["ω<sup>3</sup>+"],[""]],
  [["ω<sup>"],["</sup>"]],
  [["ε<sub>0</sub>+"],[""]],
  [["ε<sub>0</sub>*("],[")"]],
  [["ε<sub>0</sub><sup>"],["</sup>"]],
  [["ε<sub>1</sub>*("],[")"]],
  [["ε<sub>1</sub><sup>"],["</sup>"]],
  [["ε<sub>2</sub><sup>"],["</sup>"]],
  [["ε<sub>"],["</sub>"]],
  [["ζ<sub>0</sub>+"],[""]],
  [["ζ<sub>0</sub>*("],[")"]],
  [["ζ<sub>0</sub><sup>"],["</sup>"]],
  [["ε<sub>"],["</sub>"]],
  [["ζ<sub>1</sub><sup>"],["</sup>"]],
  [["ε<sub>"],["</sub>"]],
  [["ζ<sub>"],["</sub>"]],
  [["η<sub>"],["</sub>"]],
  [["φ<sub>5</sub>("],[")"]],
  [["φ<sub>6</sub>("],[")"]],
  [["φ<sub>"],["</sub>(0)"]]
   [["Γ<sub>"],["</sub>(0)"]]
   [["Γ<sub>5"],["</sub>(0)"]]
   [["Γ<sub>6"],["</sub>(0)"]]
   [["Γ<sub>7"],["</sub>(0)"]]
   [["Δ<sub>"],["</sub>(0)"]]
   [["Δ<sub>5"],["</sub>(0)"]]
    [["Δ<sub>6"],["</sub>(0)"]]
   [["Δ<sub>7"],["</sub>(0)"]]
   [["Δ<sub>8"],["</sub>(0)"]]
   [["σ<sub>"],["</sub>(0)"]]
   [["σ<sub>6"],["</sub>(0)"]]
  [["σ<sub>7"],["</sub>(0)"]]
  [["σ<sub>8"],["</sub>(0)"]]
  [["σ<sub>9"],["</sub>(0)"]]
  [["δ<sub>"],["</sub>(0)"]]
  [["δ<sub>7"],["</sub>(0)"]]
  [["δ<sub>8"],["</sub>(0)"]]
  [["δ<sub>9"],["</sub>(0)"]]
  [["δ<sub>10"],["</sub>(0)"]]
  [["λ<sub>"],["</sub>(0)"]]
  [["λ<sub>7"],["</sub>(0)"]]
  [["λ<sub>8"],["</sub>(0)"]]
  [["λ<sub>9"],["</sub>(0)"]]
  [["λ<sub>10"],["</sub>(0)"]]
  [["β<sub>"],["</sub>(0)"]]
  [["β<sub>8"],["</sub>(0)"]]
  [["β<sub>9"],["</sub>(0)"]]
  [["β<sub>10"],["</sub>(0)"]]
  [["τ<sub>"],["</sub>(0)"]]
  [["τ<sub>9"],["</sub>(0)"]]
  [["τ<sub>10"],["</sub>(0)"]]
  [["τ<sub>11"],["</sub>(0)"]]
  [["ρ<sub>"],["</sub>(0)"]]
  [["ρ<sub>10"],["</sub>(0)"]]
  [["ρ<sub>11"],["</sub>(0)"]]
  [["ρ<sub>12"],["</sub>(0)"]]
  [["ψ<sub>Ω"],["</sub>(0)"]]
  [["ψ<sub>11"],["</sub>(0)"]]
  [["ψ<sub>12"],["</sub>(0)"]]
  [["Σ<sub>"],["</sub>(0)"]]
  [["Σ<sub>Ω"],["</sub>(0)"]]
  [["Σ<sub>13"],["</sub>(0)"]]
  [["Σ<sub>14"],["</sub>(0)"]]
  END
];

var limits = [
  0,
  2000,
  5000,
  10000,
  15000,
  30000,
  40000,
  50000,
  70000,
  80000,
  100000,
  120000,
  175000,
  185000,
  195000,
  210000,
  240000,
  250000,
  270000,
  320000,
  350000,
  360000,
  365000,
  500000,
  750000,
  1e6,
  5e6,
  1e7,
  1e8,
  1e10,
  1e50,
  1e100,
  1e200,
  1e300,
  1e500,
  1e999,
];

var offsets = [
  0,
  0,
  0,
  0,
  1600,
  0,
  2000,
  2000,
  1333.3334,
  2000,
  1333.3334,
  1500,
  0,
  2000,
  2000,
  175054.0541,
  1000,
  240013.3869,
  1500,
  0,
  0,
  0,
  1750
];

function findLimit(n){
  var i = 0;
  while(limits[i] <= n){
    i++;
  }
  return i-1;
}

function LRemainder(n){
  var i = 0;
  while(limits[i] <= n){
    i++;
  }
  return ((n-limits[i-1])/(limits[i]-limits[i-1]))*(limits[i]-offsets[i-1])+offsets[i-1];
}

function parse(n){
  if(findLimit(n) == 0){
    return Math.floor(1/(1-(n/2000)))-1;
  } else if(n < limits[limits.length-1]) {
    return bits[findLimit(n)][0] + parse(LRemainder(n)) + bits[findLimit(n)][1];
  } else {
    return final;
  }
}

setInterval(function(){
  t++;
  document.getElementById("num").innerHTML = parse(t);
},10);
